---
- block:
  - name: Create secrets directory under the root user
    file:
      path: /home/root/user-passwords
      state: directory
      mode: '0700'

  - name: Get the provision-central-password from s3
    aws_s3:
      bucket: expense-tracker-secrets
      object: /host-secrets/{{ item }}
      dest: /home/root/user-passwords/{{ item }}
      mode: get
    loop:
      - "provision-password"

  - name: Register account password
    shell: "cat /home/root/user-passwords/provision-central-password"
    register: provision_central_password

  - name: Generate salted password
    shell: python3 -c 'import crypt; print(crypt.crypt("{{ provision_central_password.stdout }}", crypt.mksalt(crypt.METHOD_SHA512)))'
    register: provision_central_password_salted

  - name: Add a new provision-central user
    user:
      name: provision-central
      password: "{{ provision_central_password_salted.stdout }}"
      groups:
        - docker
        - sudo
      createhome: yes
      shell: /bin/bash
      
  - name: Move the provision password to this user's directory
    shell: mv /home/root/user-passwords/provision_password /home/provision-central/provision_password

  - name: Set the initial authorized key to the machine aws public key
    authorized_key:
      user: provision-central
      state: present
      key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/cd-host-push-id_rsa.pub') }}'"

  - name: Force login through public key
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication.*yes'
      line: 'PasswordAuthentication=no'
    notify: restart_sshd

  become: yes